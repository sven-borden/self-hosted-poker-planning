generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id         String   @id @default(uuid())
  slug       String   @unique @db.VarChar(32)
  deckId     Int
  createdAt  DateTime @default(now())
  memberships RoomMember[]
  votes      Vote[]
}

model User {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  memberships RoomMember[]
  votes     Vote[]
}

model RoomMember {
  roomId   String
  userId   String
  role     Role
  joinedAt DateTime @default(now())
  room     Room   @relation(fields: [roomId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
  @@id([roomId, userId])
}

enum Role {
  admin
  guest
}

model Deck {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  cards       DeckCard[]
}

model DeckCard {
  id      Int     @id @default(autoincrement())
  deckId  Int
  label   String
  value   Float?
  order   Int
  deck    Deck    @relation(fields: [deckId], references: [id])
}

model Vote {
  id        String   @id @default(uuid())
  roomId    String
  userId    String
  cardId    Int
  round     Int
  createdAt DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  card      DeckCard @relation(fields: [cardId], references: [id])

  @@unique([userId, roomId, round])
}
